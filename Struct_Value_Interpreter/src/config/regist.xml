<?xml version="1.0" encoding="UTF-8"?>
<RegisterMap type="static">
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.AtLeast</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.AtLeastInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.AtMost</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.AtMostInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Between</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.BetweenInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Conjunction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ConjunctionInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Disjunction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.DisjunctionInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Negation</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.NegationInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Equivalence</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.EquivalenceInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Existential</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ExistentialInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Implication</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ImplicationInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.LogicExpression</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ExpressionInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.LogicFunction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.FunctionInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.LogicVariable</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.VariableInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.DiscourseDomain</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.core.impl.MemoryReaderImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.logic.Universal</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.UniversalInferencerImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.logic.Bigger</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.BiggerInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.logic.EBigger</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.EBiggerInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.logic.Equal</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.EqualInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.logic.ESmaller</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ESmallerInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.logic.Smaller</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.SmallerInferencerImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Contain</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.ContainInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Include</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.IncludeInferencerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.GroupEqual</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.logic.impl.GroupEqualInferencerImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.Addition</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.AdditionComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.Substraction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.SubstractionComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.Multiplication</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.MultiplicationComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.Division</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.DivisionComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.Mod</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.ModComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.NumericExpression</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.ExpressionComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.NumericFunction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.FunctionComputerImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.numeric.NumericVariable</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.VariableComputerImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Cardinality</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.numeric.impl.CardinalityComputerImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Intersection</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.IntersectionInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Union</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.UnionInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Complement</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.ComplementInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.Difference</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.DifferenceInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.GroupExpression</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.GroupExpressionInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.GroupVariable</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.GroupVariableInterpreterImpl</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.GroupFunction</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.GroupFunctionInterpreterImpl</Interpreter>
	</Pair>
	
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.extend.FilterTemplate</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.FilterTemplateInterpreter</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.extend.MapTemplate</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.MapTemplateInterpreter</Interpreter>
	</Pair>
	<Pair>
		<Struct>cn.edu.buaa.sei.SVI.struct.group.extend.TableMapTemplate</Struct>
		<Interpreter>cn.edu.buaa.sei.SVI.interpreter.group.impl.TableMapTemplateInterpreter</Interpreter>
	</Pair>
	
</RegisterMap>